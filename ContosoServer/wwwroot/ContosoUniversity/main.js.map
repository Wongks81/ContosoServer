{"version":3,"sources":["./src/app/sidebar/sidebar-routing.module.ts","./src/app/students/students.model.ts","./src/app/students/student-edit/student-edit.component.ts","./src/app/students/student-edit/student-edit.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/students/students.component.ts","./src/app/students/students.component.html","./src/environments/environment.ts","./src/app/courses/courses.component.ts","./src/app/courses/courses.component.html","./src/app/courses/courses.model.ts","./src/app/courses/course-edit/course-edit.component.ts","./src/app/courses/course-edit/course-edit.component.html","./src/app/students/student-add/student-add.component.ts","./src/app/students/student-add/student-add.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/service/course.service.ts","./src/app/mainpage/mainpage.component.ts","./src/app/mainpage/mainpage.component.html","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/service/student.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { StudentsComponent } from '../students/students.component';\r\nimport { MainpageComponent } from '../mainpage/mainpage.component';\r\nimport { CoursesComponent } from '../courses/courses.component';\r\nimport { AboutComponent } from \"../about/about.component\";\r\n\r\n// A redirect route requires a pathMatch property to tell the router how to match a URL \r\n// to the path of a route. In this app, the router should select the route to the \r\n// HeroListComponent only when the entire URL matches '', so set the pathMatch value to 'full'.\r\n\r\nconst sidebarRoutes: Routes = [\r\n  { path:'mainpage', component:MainpageComponent},\r\n  { path:'students', component: StudentsComponent},\r\n  { path:'courses', component: CoursesComponent},\r\n  { path:'about', component: AboutComponent},\r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(\r\n      sidebarRoutes,\r\n      //{enableTracing: true} //<--for debugging purposes only\r\n    ),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class SidebarRoutingModule { }\r\n","import { Course } from \"../courses/courses.model\";\r\nimport { NgForm,FormGroup,FormControl,Validators,FormBuilder } from \"@angular/forms\";\r\n\r\nexport class Student{\r\n    studentId : number;\r\n    studentName : string;\r\n    admissionDate : Date;\r\n    courseId : number;\r\n    //1 student -> 1 course\r\n    course : Course = new Course();\r\n\r\n    studentFGroup : FormGroup;\r\n\r\n    constructor(){\r\n        this.studentFGroup = new FormBuilder().group({});\r\n\r\n        var vStudentName =[];\r\n        vStudentName.push(Validators.required);\r\n        // vStudentName.push(Validators.pattern(\"^[a-zA-Z]{3,10}$\"));\r\n        vStudentName.push(Validators.pattern(\"[a-zA-Z ]*\"));\r\n        this.studentFGroup.addControl(\"cStudentName\", new FormControl('', Validators.compose(vStudentName)));\r\n        //this.studentFGroup.addControl(\"ddCourseName\", new FormControl(Student));\r\n    }\r\n}","import { AfterViewChecked, Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Course } from \"../../courses/courses.model\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Student } from '../students.model';\r\nimport { Router } from '@angular/router';\r\nimport { StudentService } from 'src/app/service/student.service';\r\nimport { CourseService } from 'src/app/service/course.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-student-edit',\r\n  templateUrl: './student-edit.component.html',\r\n  styleUrls: ['./student-edit.component.css']\r\n})\r\nexport class StudentEditComponent implements OnInit {\r\n\r\n  courseList =[];\r\n  studObj = new Student();\r\n  editFlag :boolean = false;\r\n  constructor(public router:Router ,\r\n              private http:HttpClient,\r\n              private studentService: StudentService,\r\n              private courseService : CourseService  ) { \r\n\r\n    //state from .router.navigate\r\n    if(this.router.getCurrentNavigation().extras.state.student != null){\r\n      var std:any = this.router.getCurrentNavigation().extras.state.student;\r\n      this.studObj = new Student();\r\n      this.studObj.studentId = std.studentId;\r\n      this.studObj.studentName = std.studentName;\r\n      this.studObj.admissionDate = std.admissionDate;\r\n      this.studObj.courseId = std.courseId;\r\n      this.studObj.course = std.course;\r\n      this.editFlag = true;\r\n      \r\n   }\r\n   else{\r\n     this.editFlag = false;\r\n   }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchCourses();\r\n  }\r\n\r\n  fetchCourses(){\r\n    this.courseService.fetchCourses()\r\n    .subscribe(response =>{\r\n      this.courseList = response;\r\n    })\r\n  }\r\n  \r\n  onSubmit(){\r\n    var studentDTO:any ={\r\n      StudentId : this.studObj.studentId,\r\n      StudentName : this.studObj.studentName,\r\n      AdmissionDate : this.studObj.admissionDate,\r\n      CourseId : this.studObj.course.courseId,\r\n      Course : this.studObj.course\r\n    };\r\n\r\n    this.studentService.updateStudent(this.studObj.studentId,studentDTO)\r\n     .subscribe(\r\n       res=>this.Success(res),\r\n       res=>this.Error(res));\r\n  }\r\n\r\n  \r\n  Success(res){\r\n    this.router.navigateByUrl('/students');\r\n    alert(\"Request Completed!\");\r\n  }\r\n  Error(res){\r\n    alert(\"Error\" + res );\r\n  }\r\n}\r\n","<br>\r\n<form [formGroup]=\"studObj.studentFGroup\">\r\n    <div class=\"border p-3\">\r\n        <div class=\"row\">\r\n            <h3 class=\"text-info pl-3\">Edit Student</h3>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <!-- Student Name row -->\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-3\">\r\n                        Student Name\r\n                    </div>\r\n                    <div class=\"col-sm-9\">\r\n                        <input class=\"form-control\" formControlName=\"cStudentName\" [(ngModel)]=\"studObj.studentName\" name=\"StudentName\" placeholder=\"Enter Student Name\"\r\n                        ngModel>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div *ngIf=\"studObj.studentFGroup.controls['cStudentName'].dirty\" \r\n                            [hidden]=\"!(studObj.studentFGroup.controls['cStudentName'].hasError('required'))\"\r\n                            style=\"text-align: center; color:red\"><b>Student Name is required</b></div>\r\n                    </div>\r\n                </div>\r\n                    \r\n                <!-- Admission Date Datepicker -->\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-3\">\r\n                        Admission Date\r\n                    </div>\r\n                    <div class=\"col-sm-9\">\r\n                        <!--datepicker input-->\r\n                        <mat-form-field>\r\n                            <input matInput [matDatepicker]=\"picker\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"studObj.admissionDate\" placeholder=\"Choose a date\" name=\"AdmissionDate\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #picker></mat-datepicker>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Course Selection Dropdown -->\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-3\">\r\n                        Course Name\r\n                    </div>\r\n                    <div class=\"col-sm-9\">\r\n                        <!-- TO CHECK HOW TO LOAD THE SELECTED VALUE IN DROPDOWN-->\r\n                        <select class=\"form-control\" name=\"Course\" [(ngModel)]=\"studObj.course.courseId\" [ngModelOptions]=\"{standalone: true}\">\r\n                            <option *ngFor=\"let c of courseList\" [ngValue]=\"c.courseId\" >\r\n                                {{c.courseName}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                \r\n                <!-- Buttons -->\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-8\">\r\n                        <!-- Leave it empty -->\r\n                    </div>\r\n                    <div class=\"col-sm-2 \">\r\n                        <button [disabled]=\"!(studObj.studentFGroup.valid)\" class=\"btn btn-success\" type=\"Submit\" style=\"min-width: 100px;\" (click)=\"onSubmit()\">Submit</button>\r\n                    </div>\r\n                    <div class=\"col-sm-2 \">\r\n                        <button class=\"btn btn-danger w-100\" style=\"min-width: 100px;\"  routerLink=\"/students\">Back</button>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Side navigation -->\n\n    <!-- Sidebar-->\n    <aside class=\"col-12 col-md-9 p-0 bg-dark\">\n        <nav class=\"navbar navbar-expand navbar-dark bg-dark flex-md-column flex-row align-items-start\">\n            <div class=\"collapse navbar-collapse\">\n                <ul class=\"flex-md-column flex-row navbar-nav w-100 justify-content-between\">\n                    <li class=\"nav-item\" id=\"icon\">\n                        <a class=\"nav-brand pl-0\" href=\"#\"><i class=\"fab fa-cuttlefish fa-3x pl-2\"></i></a>\n                    </li>\n                    <li class=\"active\">\n                        <a class=\"nav-link\" routerLink=\"/mainpage\"><i class=\"fas fa-home\"></i>&nbsp;Home</a>\n                    </li>\n                    <li class=\"active\">\n                        <a class=\"nav-link\" routerLink=\"/students\"><i class=\"fas fa-user-graduate\">&nbsp;Student</i></a>\n                    </li>\n                    <li class=\"active\">\n                        <a class=\"nav-link\" routerLink=\"/courses\"><i class=\"fas fa-book\">&nbsp;Course</i></a>\n                    </li>\n                    <li class=\"active\" id=\"AboutPageLink\">\n                        <a class=\"nav-link \" routerLink=\"/about\"><i class=\"fas fa-info-circle\">&nbsp;About</i></a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    </aside>\n           \n       \n \n   \n    ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <h1>About this Project</h1>\n  <div class=\"container col-sm-6\">\n    <br>\n    <table class=\"table table-bordered table-dark\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Specifications</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Frontend</td>\n          <td>Angular 11</td>\n        </tr>\n        <tr>\n          <td>Backend</td>\n          <td>MVC Core 5.0</td>\n        </tr>\n        <tr>\n          <td>Database</td>\n          <td>SQL Server</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n<br>\n<br>\n<div class=\"container\">\n  <pre style=\"font-family: serif; font-size: medium;\">\n    <b>\n    This project was introduced while I was studying for SGUnited skills for Full Stack Developer \n    under NTUC learning Hub.\n  \n    It went through alot of transformation as we were taught first to use console app to program the logic.\n    After that, use Javascript, Html and CSS to make it look better\n \n    As the courses went, I thought we will be using this project for MVC and Angular. \n    So in my free time, I have successfully convert it to MVC with razor syntax and asp helper tags.\n\n    Although in the end this project was not selected for MVC and Angular, I decided to use this project \n    to revise on what has been gone through during the lectures.\n    \n    There are still alot of places to improve (like css and ngrx) but this project is created to put what \n    I have learned to use so I will be using this as a testbed in the future if there is a need.\n  \n  </b>\n  </pre>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { Student } from \"./students.model\";\r\nimport { Router } from '@angular/router';\r\nimport { StudentService } from \"../service/student.service\";\r\n\r\n@Component({\r\n  selector: 'app-students',\r\n  templateUrl: './students.component.html',\r\n  styleUrls: ['./students.component.css']\r\n})\r\nexport class StudentsComponent implements OnInit {\r\n  studList :any =[];\r\n  constructor(private http:HttpClient,\r\n              private studentService:StudentService,\r\n              private router:Router,\r\n             ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchStudent();\r\n  }\r\n\r\n  fetchStudent(){\r\n    this.studentService.fetchStudents()\r\n      .subscribe(\r\n        res=>{\r\n          this.studList = res;\r\n        },\r\n        res=>this.Error\r\n      )\r\n  }\r\n\r\n  editStudent(selected:Student){\r\n    this.router.navigate(['/students/student-edit'],\r\n    {\r\n      //pass the object to a variable call student as extra options\r\n      state : {student:selected}\r\n    });\r\n  }\r\n\r\n  deleteStudent(selected:Student){\r\n    var reply = confirm(\"Remove \" + selected.studentName + \" from Database?\");\r\n    if(reply == true){\r\n      this.studentService.deleteStudent(selected.studentId)\r\n      .subscribe(\r\n        res =>this.Success(res),\r\n        res => this.Error(res)\r\n    );     \r\n    }\r\n  }\r\n\r\n  Success(res){\r\n    this.ngOnInit();\r\n  }\r\n  Error(res){\r\n    alert(res);\r\n  }\r\n}\r\n","<br>\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-8 my-auto h3\">\r\n            List Of Students\r\n        </div>\r\n        <div class=\"col-sm-4 my-auto h3\">\r\n            <a class=\"btn btn-success fa-pull-right\" routerLink=\"/students/student-add\" [state]=\"{state : {student:null}}\">\r\n                <i class=\"fas fa-plus\"> Add Student</i>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th style=\"width:10%\">ID</th>\r\n            <th style=\"width:25%\">Student Name</th>\r\n            <th style=\"width:25%\">Course Name</th>\r\n            <th style=\"width:20%\">Admission Date</th>\r\n            <th style=\"width:10%\"></th>\r\n            <th style=\"width:10%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of studList\">\r\n            <th scope=\"row\">{{item.studentId}}</th>\r\n            <td>{{item.studentName}}</td>\r\n            <td>{{item.course.courseName}}</td>\r\n            <td>{{item.admissionDate | date : \"dd/MM/yyyy\"}}</td>\r\n            <td class=\"text-center\">\r\n                <div class=\"w-75 btn-group\" role=\"group\">\r\n                    <button class=\"btn btn-primary mx-2\" style=\"min-width: 100px;\" (click)=\"editStudent(item)\">\r\n                        Edit\r\n                    </button>\r\n                </div>\r\n            </td>\r\n            <td class=\"text-center\">\r\n                <div class=\"w-75 btn-group\" role=\"group\">\r\n                    <button class=\"btn btn-danger mx-2\" style=\"min-width: 100px;\" (click)=\"deleteStudent(item)\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Course } from './courses.model';\r\nimport { Router } from '@angular/router';\r\nimport { CourseService } from \"../service/course.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-courses',\r\n  templateUrl: './courses.component.html',\r\n  styleUrls: ['./courses.component.css']\r\n})\r\nexport class CoursesComponent implements OnInit {\r\n  \r\n  coursesList =[];\r\n  constructor(private http:HttpClient, \r\n              private router:Router,     //get current loaded route\r\n              private courseService: CourseService,\r\n              \r\n              ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadCourses();\r\n  }\r\n\r\n  editCourse(id){\r\n    this.router.navigate(['/courses/course-edit', id]); \r\n  }\r\n\r\n  loadCourses(){\r\n    //get list of current courses\r\n    this.courseService.fetchCourses()\r\n    .subscribe(response =>{\r\n      this.coursesList = response;\r\n    })\r\n  }\r\n\r\n  deleteCourse(id:number, courseName : string){\r\n    var reply = confirm(\"Remove \" + courseName + \" from Database?\");\r\n    if(reply == true){\r\n      this.courseService.deleteCourse(id)\r\n      .subscribe(\r\n        res =>this.Success(res),\r\n        res => this.Error(res)\r\n    );     \r\n    }\r\n  }\r\n  Success(res){\r\n    this.ngOnInit();\r\n    alert(\"Request Completed!\");\r\n  }\r\n  Error(res){\r\n    alert(\"Error\" );\r\n  }\r\n}\r\n","<br>\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-8 my-auto h3\">\r\n            List Of Courses\r\n        </div>\r\n        <div class=\"col-sm-4 my-auto h3\">\r\n            <a class=\"btn btn-success fa-pull-right\" routerLink=\"/courses/course-edit\">\r\n                <i class=\"fas fa-plus\"> Add Course</i>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th style=\"width:10%\">ID</th>\r\n            <th style=\"width:70%\">Course Name</th>\r\n            <th style=\"width:10%\"></th>\r\n            <th style=\"width:10%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of coursesList\">\r\n            <th scope=\"row\">{{item.courseId}}</th>\r\n            <td>{{item.courseName}}</td>\r\n            <td class=\"text-center\">\r\n                <div class=\"w-75 btn-group\" role=\"group\">\r\n                    <button class=\"btn btn-primary mx-2 \" (click)=\"editCourse(item.courseId)\">\r\n                        Edit\r\n                    </button>\r\n                </div>\r\n            </td>\r\n            <td class=\"text-center\">\r\n                <div class=\"w-75 btn-group\" role=\"group\">\r\n                    <button  mat-button class=\"btn btn-danger mx-2 \" (click)=\"deleteCourse(item.courseId, item.courseName)\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n</div>\r\n","import { Student } from \"../students/students.model\";\r\nimport { NgForm,FormGroup,FormControl,Validators,FormBuilder } from \"@angular/forms\";\r\n\r\nexport class Course{\r\n    courseId: number;\r\n    courseName: string;\r\n    //1 Course can have alot of students\r\n    students: Array<Student> = new Array<Student>();\r\n\r\n    courseFGroup : FormGroup;\r\n\r\n    constructor(){\r\n        this.courseFGroup = new FormBuilder().group({});\r\n        this.courseFGroup.addControl(\"cCourseName\", new FormControl('', Validators.required));\r\n    }\r\n}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Course } from '../courses.model';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CourseService } from \"../../service/course.service\";\r\nimport * as _ from \"lodash\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-course-edit',\r\n  templateUrl: './course-edit.component.html',\r\n  styleUrls: ['./course-edit.component.css']\r\n})\r\nexport class CourseEditComponent implements OnInit {\r\n  courseObj : Course = new Course();\r\n  courseData=[];\r\n  id:number = 0 ;\r\n  constructor(private http:HttpClient, \r\n              private route:ActivatedRoute,\r\n              private courseService : CourseService,\r\n              private router:Router) { \r\n               this.id = Number(this.route.snapshot.paramMap.get('id')) ? \r\n                          Number(this.route.snapshot.paramMap.get('id')) : 0;\r\n              }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    if(this.id != 0){\r\n      this.courseService.getSelectedCourse(this.route.snapshot.paramMap.get('id'))\r\n          .subscribe(respondData => {\r\n          this.courseData= respondData[0];    //get the 1st or only record from the response\r\n          this.courseObj.courseFGroup.controls.cCourseName.setValue(this.courseData['courseName']);\r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  onSubmit(){\r\n    //prevent circular error, remove formGroup details from object\r\n    //Brackets is the form group NAME that you have assigned\r\n    var courseDTO : any = _.omit(this.courseObj,['courseFGroup'])\r\n\r\n    if(this.id != 0){\r\n      //Edit section\r\n      this.courseService.updateCourse(this.id, courseDTO)\r\n        .subscribe(\r\n          res =>this.Success(res),\r\n          res => this.Error(res)\r\n      );\r\n    }\r\n    else\r\n    {\r\n      //Add section\r\n      this.courseService.addCourse(courseDTO)\r\n        .subscribe(\r\n          res =>this.Success(res),\r\n          res => this.Error(res)\r\n      );\r\n    }\r\n  }\r\n  Success(res){\r\n    alert(\"Request Completed!\");\r\n    this.router.navigateByUrl('/courses');\r\n  }\r\n  Error(res){\r\n    alert(\"Error\" );\r\n  }\r\n}\r\n","<br>\n<form [formGroup]=\"courseObj.courseFGroup\">\n    <div class=\"border p-3\">\n        <div class=\"row\">\n            <h3 class=\"text-info pl-3\">Add New Course</h3>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <!-- Student Name row -->\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-3\">\n                        Course Name\n                    </div>\n                    <div class=\"col-sm-9\">\n                        <input class=\"form-control\" formControlName=\"cCourseName\" [(ngModel)]=\"courseObj.courseName\" name=\"CourseName\" placeholder=\"Enter Course Name\"\n                        ngModel>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-12\">\n                        <div *ngIf=\"courseObj.courseFGroup.controls['cCourseName'].dirty\" \n                            [hidden]=\"!(courseObj.courseFGroup.controls['cCourseName'].hasError('required'))\"\n                            style=\"text-align: center; color:red\"><b>Course Name is required</b></div>\n                    </div>\n                </div>      \n\n                <!-- Buttons -->\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-8\">\n                        <!-- Leave it empty -->\n                    </div>\n                    <div class=\"col-sm-2 \">\n                        <button [disabled]=\"!(courseObj.courseFGroup.valid)\" class=\"btn btn-success\" type=\"Submit\" style=\"min-width: 100px;\" (click)=\"onSubmit()\">Submit</button>\n                    </div>\n                    <div class=\"col-sm-2 \">\n                        <button class=\"btn btn-danger w-100\" style=\"min-width: 100px;\"  routerLink=\"/courses\">Back</button>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CourseService } from 'src/app/service/course.service';\r\nimport { StudentService } from 'src/app/service/student.service';\r\nimport { Student } from '../students.model';\r\n\r\n@Component({\r\n  selector: 'app-student-add',\r\n  templateUrl: './student-add.component.html',\r\n  styleUrls: ['./student-add.component.css']\r\n})\r\nexport class StudentAddComponent implements OnInit {\r\n  courseList =[];\r\n  studObj = new Student();\r\n  editFlag :boolean = false;\r\n  \r\n  constructor(public router:Router ,\r\n              private http:HttpClient,\r\n              private studentService: StudentService,\r\n              private courseService : CourseService,\r\n               ) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.fetchCourses();\r\n    this.studObj.admissionDate = new Date();\r\n  }\r\n\r\n  fetchCourses(){\r\n    this.courseService.fetchCourses()\r\n    .subscribe(response =>{\r\n      this.courseList = response;\r\n    })\r\n  }\r\n  \r\n  onSubmit(){\r\n    // var studentDTO : any = _.omit(this.studObj,['studentFGroup']);\r\n    var studentDTO:any ={\r\n      StudentId : this.studObj.studentId,\r\n      StudentName : this.studObj.studentName,\r\n      AdmissionDate : this.studObj.admissionDate,\r\n      CourseId : this.studObj.course.courseId,\r\n      Course : this.studObj.course\r\n    };\r\n\r\n    this.studentService.addStudent(studentDTO)\r\n     .subscribe(\r\n       res=>this.Success(res),\r\n       res=>this.Error(res));\r\n\r\n  }\r\n\r\n  Success(res){\r\n    this.router.navigateByUrl('/students');\r\n    alert(\"Request Completed!\");\r\n\r\n  }\r\n  Error(res){\r\n    alert(\"Error\" + res );\r\n  }\r\n}\r\n","<br>\r\n<form [formGroup]=\"studObj.studentFGroup\">\r\n    <div class=\"border p-3\">\r\n        <div class=\"row\">\r\n            <h3 class=\"text-info pl-3\">Add New Student</h3>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <!-- Student Name row -->\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-3\">\r\n                        Student Name\r\n                    </div>\r\n                    <div class=\"col-sm-9\">\r\n                        <input class=\"form-control\" formControlName=\"cStudentName\" [(ngModel)]=\"studObj.studentName\" name=\"StudentName\" placeholder=\"Enter Student Name\"\r\n                        ngModel>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div *ngIf=\"studObj.studentFGroup.controls['cStudentName'].dirty\" \r\n                            [hidden]=\"!(studObj.studentFGroup.controls['cStudentName'].hasError('required'))\"\r\n                            style=\"text-align: center; color:red\"><b>Student Name is required</b></div>\r\n                    </div>\r\n                </div>\r\n                    \r\n                <!-- Admission Date Datepicker -->\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-3\">\r\n                        Admission Date\r\n                    </div>\r\n                    <div class=\"col-sm-9\">\r\n                        <!--datepicker input-->\r\n                        <mat-form-field>\r\n                            <input matInput [matDatepicker]=\"picker\" disabled [ngModelOptions]=\"{standalone: true}\" \r\n                            [(ngModel)]=\"studObj.admissionDate\" placeholder=\"Choose a date\" name=\"AdmissionDate\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #picker disabled=\"false\"></mat-datepicker>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Course Selection Dropdown -->\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-3\">\r\n                        Course Name\r\n                    </div>\r\n                    <div class=\"col-sm-9\">\r\n                        <select class=\"form-control\" name=\"Course\" [(ngModel)]=\"studObj.course\" [ngModelOptions]=\"{standalone: true}\">\r\n                            <option *ngFor=\"let c of courseList\" [ngValue]=\"c\" >\r\n                                {{c.courseName}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                \r\n                <!-- Buttons -->\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-8\">\r\n                        <!-- Leave it empty -->\r\n                    </div>\r\n                    <div class=\"col-sm-2 \">\r\n                        <button [disabled]=\"!(studObj.studentFGroup.valid)\" class=\"btn btn-success\" type=\"Submit\" style=\"min-width: 100px;\" (click)=\"onSubmit()\">Submit</button>\r\n                    </div>\r\n                    <div class=\"col-sm-2 \">\r\n                        <button class=\"btn btn-danger w-100\" style=\"min-width: 100px;\"  routerLink=\"/students\">Back</button>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ContosoUniversity';\n  \n}\n","<div class=\"jumbotron bg-dark text-white\">\n  <p>Contoso University</p>\n</div>\n<div class=\"container-fluid\">\n  <div class=\"row\" >\n    <!-- remove white space on the left side-->\n      <div class=\"col-md-2\" style=\"padding: 0;overflow:hidden;\">\n          <app-sidebar></app-sidebar>\n      </div>\n      <div class=\"col-md-10\" >\n        <div class=\"container-fluid\" id=\"mainWindow\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { SidebarRoutingModule } from \"./sidebar/sidebar-routing.module\";\n\nimport { AppComponent } from './app.component';\nimport { MainpageComponent } from './mainpage/mainpage.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { StudentsComponent } from './students/students.component';\nimport { CoursesComponent } from './courses/courses.component';\nimport { StudentEditComponent } from './students/student-edit/student-edit.component';\nimport { AboutComponent } from './about/about.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { CourseEditComponent } from './courses/course-edit/course-edit.component';\nimport { Student } from './students/students.model';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { StudentAddComponent } from './students/student-add/student-add.component';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainpageComponent,\n    SidebarComponent,\n    StudentsComponent,\n    CoursesComponent,\n    StudentEditComponent,\n    AboutComponent,\n    CourseEditComponent,\n    StudentAddComponent,\n   \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    SidebarRoutingModule,\n    BrowserAnimationsModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    ReactiveFormsModule\n    \n  ],\n  providers: [\n              {provide: MAT_DATE_LOCALE, useValue: 'en-SG'},\n            ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Course } from \"../courses/courses.model\";\r\n\r\n\r\n\r\n//provided in : add the current service to app module without declaring it there.\r\n@Injectable({providedIn: 'root'})\r\nexport class CourseService{\r\n\r\n    constructor( private http:HttpClient, private router:Router){}\r\n\r\n    addCourse(obj : Course)\r\n    {\r\n       // if(this.courseObj.CourseId == null){\r\n      //Add new Course the id is null\r\n      return this.http.post(\"https://localhost:44348/api/CourseAPI\", obj)\r\n    }\r\n    fetchCourses(){\r\n        \r\n        return this.http.get<{[key:string]:Course}>('https://localhost:44348/api/CourseAPI')\r\n        .pipe(map(\r\n          responseData =>{\r\n            const countArray : any = [];\r\n            for(const item in responseData){\r\n              countArray.push({...responseData[item]});\r\n            }\r\n            return countArray;\r\n          }\r\n        ))\r\n      }\r\n\r\n      getSelectedCourse(id){\r\n        return this.http.get<{[key:string]:Course}>('https://localhost:44348/api/CourseAPI/' + id )\r\n                  .pipe(map( res => {\r\n                    const courseArr : any = [];\r\n                    courseArr.push(res);\r\n                    return courseArr;\r\n                }));\r\n      }\r\n\r\n      updateCourse(id : number, obj : Course){\r\n        return this.http.put('https://localhost:44348/api/CourseAPI/' + id , obj);\r\n      }\r\n\r\n      deleteCourse(id : number){\r\n        return this.http.delete('https://localhost:44348/api/CourseAPI/' + id);\r\n      }\r\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\n\nimport { statsCount } from \"./mainpage.model\";\n\n@Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.css']\n})\nexport class MainpageComponent implements OnInit {\n\n  dbCount :statsCount[] =[]\n  constructor(private http:HttpClient) { }\n\n  ngOnInit(): void {\n    this.fetchCounts();\n    \n  }\n\n  private fetchCounts(){\n    this.http.get<{[key:string]:statsCount}>('https://localhost:44348/api/ContosoAPI')\n    .pipe(map(\n      responseData =>{\n        const countArray : any = [];\n        for(const item in responseData){\n          countArray.push({...responseData[item]});\n        }\n        return countArray;\n      }\n    ))\n    .subscribe(respondData => {\n      this.dbCount = respondData;\n    });\n  }\n\n}\n","\n\n            <br>\n            <!-- Carousel-->\n            <div id=\"MainPageCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\n                <ul class=\"carousel-indicators\">\n                    <li data-target=\"#MainPageCarousel\" data-slide-to=\"0\" class=\"active\"></li>\n                    <li data-target=\"#MainPageCarousel\" data-slide-to=\"1\"></li>\n                    <li data-target=\"#MainPageCarousel\" data-slide-to=\"2\"></li>\n                </ul>\n        \n                <!--Slideshow -->\n                <div class=\"carousel-inner\">\n                    <div class=\"carousel-item active\">\n                        <img src=\"/ContosoUniversity/assets/images/classroom1.jpg\" alt=\"Classroom Pic\" />\n                        <div class=\"carousel-caption\">\n                            <h3>High Tech Classroom</h3>\n                            <p>Using technology to help students to have better understanding</p>\n                        </div>\n                    </div>\n                    <div class=\"carousel-item\">\n                        <img src=\"/ContosoUniversity/assets/images/students1.jpg\" alt=\"Students Pic\" />\n                        <div class=\"carousel-caption\">\n                            <h3>Multi-Racial Community</h3>\n                            <p>Multi-Racial environment with diverse culture</p>\n                        </div>\n                    </div>\n                    <div class=\"carousel-item\">\n                        <img src=\"/ContosoUniversity/assets/images/play1.jpg\" alt=\"Play Pic\" />\n                        <div class=\"carousel-caption\">\n                            <h3>Work Hard ~ Play Harder</h3>\n                            <p>Clubs and societies to fuel student interest and ambition</p>\n                        </div>\n                    </div>\n                </div>\n                <!-- Left and Right -->\n                <a class=\"carousel-control-prev\" href=\"#MainPageCarousel\" data-slide=\"prev\">\n                    <span class=\"carousel-control-prev-icon\"></span>\n                </a>\n                <a class=\"carousel-control-next\" href=\"#MainPageCarousel\" data-slide=\"next\">\n                    <span class=\"carousel-control-next-icon\"></span>\n                </a>\n            </div>\n            \n            <br>\n            <!-- Modal -->\n            \n                <div class=\"text-center\">\n                    <!-- insert modal here for disclaimer -->\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#MainPageModal\">\n                        Disclaimer\n                    </button>\n        \n                    <!-- The Modal -->\n                    <div class=\"modal fade\" id=\"MainPageModal\">\n                        <div class=\"modal-dialog\">\n                            <div class=\"modal-content\">\n        \n                                <!-- Modal Header -->\n                                <div class=\"modal-header\">\n                                    <h4 class=\"modal-title\">Disclaimer</h4>\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                                </div>\n        \n                                <!-- Modal body -->\n                                <div class=\"modal-body active\">\n                                    <p>The pictures used in this site belongs to their respective owners. I do not own these pitcures.</p>\n                                    <p>Please send an email to baijiazi81@yahoo.com.sg if you are the owner and wished to have it removed</p>\n                                </div>\n        \n                                <!-- Modal footer -->\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n                                </div>\n        \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            \n            <br>\n            <br />\n            <!-- Text cards -->\n            <div class=\"container\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h6 class=\"card-title\">Message from the Admins</h6>\n                        <p class=\"card-text\">Welcome to Contoso University!!</p>\n                    </div>\n                </div>\n            </div>\n            <br />\n        \n            <!-- Statistical Cards-->\n            <div class=\"container\">\n                <h3>Statistics</h3>\n                <div class=\"card-deck\">\n                    <div class=\"card bg-success\">\n                        <div class=\"card-body text-center\" id=\"cardStudent\">\n                            <p class=\"card-text\">Students</p>\n                            <ng-container *ngFor=\"let item of dbCount\">\n                                <div *ngIf=\"item.name === 'sCount'\">\n                                    <p>{{item.count}}</p>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </div>\n                    <div class=\"card bg-danger \">\n                        <div class=\"card-body text-center\" id=\"cardCourse\">\n                            <p class=\"card-text\">Courses</p>\n                            <ng-container *ngFor=\"let item of dbCount\">\n                                <div *ngIf=\"item.name === 'cCount'\">\n                                    <p>{{item.count}}</p>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </div>\n        \n                </div>\n            </div>\n \n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\nconst materialModules = [\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatFormFieldModule,\r\n  MatInputModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ...materialModules\r\n  ],\r\n  exports: [\r\n    ...materialModules\r\n  ],\r\n})\r\n\r\nexport class AngularMaterialModule { }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { StudentsComponent } from './students/students.component';\r\nimport { MainpageComponent } from './mainpage/mainpage.component';\r\nimport { CoursesComponent } from './courses/courses.component';\r\nimport { StudentEditComponent } from './students/student-edit/student-edit.component';\r\nimport { AboutComponent } from \"./about/about.component\";\r\nimport { CourseEditComponent } from './courses/course-edit/course-edit.component';\r\nimport { StudentAddComponent } from './students/student-add/student-add.component';\r\n\r\n// A redirect route requires a pathMatch property to tell the router how to match a URL \r\n// to the path of a route. In this app, the router should select the route to the \r\n// HeroListComponent only when the entire URL matches '', so set the pathMatch value to 'full'.\r\n\r\nconst appRoutes: Routes = [\r\n  { path:'', component:MainpageComponent},\r\n  { path:'about', component: AboutComponent},\r\n\r\n  //student section\r\n  { path:'students', component:StudentsComponent},\r\n  { path:'students/student-edit', component:StudentEditComponent},\r\n  { path:'students/student-add', component:StudentAddComponent},\r\n\r\n  //course section\r\n  { path:'courses', component:CoursesComponent},\r\n  { path:'courses/course-edit', component:CourseEditComponent},\r\n  { path:'courses/course-edit/:id', component:CourseEditComponent},\r\n\r\n  \r\n  \r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n     // {enableTracing: true} //<--for debugging purposes only\r\n    ),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Student } from \"../students/students.model\";\r\nimport * as _ from \"lodash\";\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StudentService{\r\n    studentObj = new Student();\r\n    constructor( private http:HttpClient, private router:Router){}\r\n\r\n    addStudent(obj : Student)\r\n    {\r\n      //Add new Student the id is null\r\n      return this.http.post(\"https://localhost:44348/api/StudentAPI\", obj);\r\n    }\r\n\r\n    fetchStudents(){\r\n        return this.http.get('https://localhost:44348/api/StudentAPI');\r\n    }\r\n\r\n    updateStudent(id : number, obj : Student){\r\n      return this.http.put('https://localhost:44348/api/StudentAPI/' + id , obj);\r\n    }\r\n\r\n    deleteStudent(id : number){\r\n      return this.http.delete('https://localhost:44348/api/StudentAPI/' + id);\r\n    }\r\n    \r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}